###
### SCALE: 100
### CSLUVERSION: 2.0.0
###
set Coord "-850.0 1630.0 32 32"

##### ROOT SCREEN
set offsetX [expr $x - -850.0]
set offsetY [expr $y - 1630.0]
set p $ObjectTypes(activeScreen)

# subnet_84
set x0 [expr -850.0 + $offsetX] 
set y0 [expr 1630.0 + $offsetY] 
set obvar [newO subnet $x0 $y0 {no 1}]
set r(subnet_84) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(stream) {live}
set ob(repairID) {.screen1}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {cooker}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}

##### SUBDIALOGUE
set offsetX 0
set offsetY 0
set id [registerScreen "cooker"]
lappend newScreens subnet_84 $id
recordActiveScreen $id

# enter_221
set x0 [expr -30 + $offsetX] 
set y0 [expr 30 + $offsetY] 
set obvar [newO enter $x0 $y0 {no 1}]
set r(enter_221) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {enter}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}

# prect_222
set x0 [expr -20 + $offsetX] 
set y0 [expr 280 + $offsetY] 
set obvar [newO prect $x0 $y0 {no 2}]
set r(prect_222) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {cooker_state}
set ob(dtmf,interrupt) {0}
set ob(words) {{{{$state == "Off"}} {} {}} {{{$state == "On"}} {} {}}}
set ob(grammar) {{} {}}

# action_223
set x0 [expr 140 + $offsetX] 
set y0 [expr 270 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_223) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {get_properties}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {set currentState [db "select Power, Ring1Setting, Ring2Setting, OvenSetting from Cooker where Room = '$room'"]
regsub {\{} $currentState {} currentState
regsub {\}} $currentState {} currentState
set state [lindex $currentState 0]
set ring1s [lindex $currentState 1]
set ring2s [lindex $currentState 2]
set oven1s [lindex $currentState 3]}

# action_224
set x0 [expr 0 + $offsetX] 
set y0 [expr 390 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_224) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {turn_on}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {db "update Cooker set Power = 'On' where Room = '$room'"}

# queryone_225
set x0 [expr -140 + $offsetX] 
set y0 [expr 370 + $offsetY] 
set obvar [newO queryone $x0 $y0 {no 2}]
set r(queryone_225) $obvar
upvar #0 $obvar ob
set ob(gif_original) {C:/Program Files/CSLU/Toolkit/2.0/apps/rad/base/gif/generic.gif}
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(changetrigger) {5}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(gif_tmmods) {C:/Program Files/CSLU/Toolkit/2.0/apps/rad/packages/Tucker-Maxon/gif_alt/generic.gif}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(prompt,markupText) {<SABLE></SABLE>
}
set ob(recogportType,0) {Words}
set ob(recogportType,1) {Words}
set ob(override:repair) {0}
set ob(override:tts) {0}
set ob(prompt,ttsText) {Would you like to switch the cooker on?}
set ob(repairStatus) {default}
set ob(changerate) {5}
set ob(prompt) {Would you like to switch the cooker on?}
set ob(dynamicWords) {{No {n oU}} {Yes {j E s}} {Please {pc ph l i: z}}}
set ob(dyn:recog) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(portType,0) {Undefined}
set ob(portType,1) {Undefined}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {turn_cooker_on}
set ob(dtmf,interrupt) {0}
set ob(words) {{No {} {{{n oU}}}} {{Yes Please} {} {{{j E s}} {{pc ph l i: z}}}}}
set ob(grammar) {{{} {}} {{} {}}}
set ob(recognizer) {name adult_english_16khz_0.ob infoDial American infoRate 16000}

# action_226
set x0 [expr -20 + $offsetX] 
set y0 [expr 160 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_226) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {get_cooker_state}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {set currentState [db "select Power from Cooker where Room = '$room'"]
regsub {\{} $currentState {} currentState
regsub {\}} $currentState {} currentState
set state [lindex $currentState 0]}

# queryone_227
set x0 [expr 160 + $offsetX] 
set y0 [expr 380 + $offsetY] 
set obvar [newO queryone $x0 $y0 {no 5}]
set r(queryone_227) $obvar
upvar #0 $obvar ob
set ob(gif_original) {C:/Program Files/CSLU/Toolkit/2.0/apps/rad/base/gif/generic.gif}
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(changetrigger) {5}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(gif_tmmods) {C:/Program Files/CSLU/Toolkit/2.0/apps/rad/packages/Tucker-Maxon/gif_alt/generic.gif}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(prompt,markupText) {<SABLE></SABLE>
}
set ob(recogportType,0) {Words}
set ob(recogportType,1) {Words}
set ob(recogportType,2) {Words}
set ob(override:repair) {0}
set ob(override:tts) {0}
set ob(recogportType,3) {Words}
set ob(prompt,ttsText) {The left ring is currently on the $ring1s setting, the right ring is currently on the $ring2s setting and the oven is currently on the $oven1s setting. Which option would you like to change?}
set ob(repairStatus) {default}
set ob(recogportType,4) {Words}
set ob(changerate) {5}
set ob(prompt) {The left ring is currently on the $ring1s setting, the right ring is currently on the $ring2s setting and the oven is currently on the $oven1s setting. Which option would you like to change?}
set ob(dynamicWords) {{menu {m E n j u}} {back {bc b @ kc kh}} {ring_1 {9r I N [.pau] w ^ n}} {left_ring {l E f tc th [.pau] 9r I N}} {Ring_2 {9r I N [.pau] tc th u}} {Right_Ring {9r aI tc th [.pau] 9r I N}} {Oven {^ v ^ n}} {Power {pc ph aU 3r}} {Turn_Off {tc th 3r n [.pau] > f}}}
set ob(dyn:recog) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(portType,0) {Undefined}
set ob(portType,1) {Undefined}
set ob(package) {Base}
set ob(portType,2) {Undefined}
set ob(portType,3) {Undefined}
set ob(portType,4) {Undefined}
set ob(override:caption) {0}
set ob(name) {select_an_option}
set ob(dtmf,interrupt) {0}
set ob(words) {{{menu back} {} {{{m E n j u}} {{bc b @ kc kh}}}} {{{ring 1} {left ring}} {} {{{9r I N [.pau] w ^ n}} {{l E f tc th [.pau] 9r I N}}}} {{{Ring 2} {Right Ring}} {} {{{9r I N [.pau] tc th u}} {{9r aI tc th [.pau] 9r I N}}}} {Oven {} {{{^ v ^ n}}}} {{Power {Turn Off}} {} {{{pc ph aU 3r}} {{tc th 3r n [.pau] > f}}}}}
set ob(grammar) {{{} {}} {{} {}} {{} {}} {{} {}} {{} {}}}
set ob(recognizer) {name adult_english_16khz_0.ob infoDial American infoRate 16000}

# exit_228
set x0 [expr -170 + $offsetX] 
set y0 [expr 500 + $offsetY] 
set obvar [newO exit $x0 $y0 {no 0}]
set r(exit_228) $obvar
upvar #0 $obvar ob
set ob(bargein) {off}
set ob(override:recognizer) {0}
set ob(recogType) {Tree}
set ob(dtmf,interrupt) {0}
set ob(dtmf,mode) {off}
set ob(package) {Base}
set ob(override:tts) {0}
set ob(exitStatus) {continue}
set ob(override:caption) {0}
set ob(prompt,type) {tts}
set ob(name) {return:continue}
set ob(override:vumeter) {0}
set ob(override:sdet) {0}
set ob(prompt,recordFlag) {0}

# action_229
set x0 [expr 260 + $offsetX] 
set y0 [expr 510 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_229) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {turn_off}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {db "update Cooker set Power = 'Off' where Room = '$room'"
db "update Cooker set Ring1Setting = 'Off' where Room = '$room'"
db "update Cooker set Ring2Setting = 'Off' where Room = '$room'"
db "update Cooker set OvenSetting = 'Off' where Room = '$room'"}

# action_230
set x0 [expr -10 + $offsetX] 
set y0 [expr 510 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_230) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {set_ring1}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {set item "Ring1Setting"}

# action_231
set x0 [expr 90 + $offsetX] 
set y0 [expr 500 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_231) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {set_ring2}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {set item "Ring2Setting"}

# action_232
set x0 [expr 180 + $offsetX] 
set y0 [expr 510 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_232) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {set_oven}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {set item "OvenSetting"}

# queryone_233
set x0 [expr 90 + $offsetX] 
set y0 [expr 590 + $offsetY] 
set obvar [newO queryone $x0 $y0 {no 1}]
set r(queryone_233) $obvar
upvar #0 $obvar ob
set ob(gif_original) {C:/Program Files/CSLU/Toolkit/2.0/apps/rad/base/gif/generic.gif}
set ob(recogType) {Grammar}
set ob(override:recognizer) {0}
set ob(changetrigger) {5}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(gif_tmmods) {C:/Program Files/CSLU/Toolkit/2.0/apps/rad/packages/Tucker-Maxon/gif_alt/generic.gif}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(prompt,markupText) {<SABLE></SABLE>
}
set ob(recogportType,0) {Words}
set ob(override:repair) {0}
set ob(override:tts) {0}
set ob(prompt,ttsText) {Specify a new setting}
set ob(repairStatus) {default}
set ob(changerate) {5}
set ob(prompt) {Specify a new setting}
set ob(dynamicWords) {{Off {> f}} {Low {l oU}} {Medium {m i: dc d i: ^ m}} {High {h aI}}}
set ob(dyn:recog) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(portType,0) {Undefined}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {new_setting}
set ob(dtmf,interrupt) {0}
set ob(words) {{{Off Low Medium High} {} {{{> f}} {{l oU}} {{m i: dc d i: ^ m}} {{h aI}}}}}
set ob(grammar) {{cooker {$setting = Off | Low | Medium | High;}}}
set ob(recognizer) {name adult_english_16khz_0.ob infoDial American infoRate 16000}

# action_234
set x0 [expr 90 + $offsetX] 
set y0 [expr 680 + $offsetY] 
set obvar [newO action $x0 $y0 {no 1}]
set r(action_234) $obvar
upvar #0 $obvar ob
set ob(recogType) {Tree}
set ob(override:recognizer) {0}
set ob(dtmf,mode) {off}
set ob(prompt,type) {tts}
set ob(override:sdet) {0}
set ob(override:vumeter) {0}
set ob(override:tts) {0}
set ob(prompt,recordFlag) {0}
set ob(bargein) {off}
set ob(package) {Base}
set ob(override:caption) {0}
set ob(name) {set_new_state}
set ob(dtmf,interrupt) {0}
set ob(words) {{{} {} {}}}
set ob(grammar) {{}}
set ob(program) {set newSetting [lindex $new_setting(recog) 0]
db "update Cooker set $item = '$newSetting' where Room = '$room'"}

####### CONNECTIONS
connect r queryone_227 action_229 4 216.0 458.0 246.0 472.0 276.0 495.0 $offsetX $offsetY
connect r queryone_227 action_231 2 176.0 458.0 141.0 467.0 106.0 485.0 $offsetX $offsetY
connect r action_231 queryone_233 0 106.0 578.0 106.0 572.0 106.0 575.0 $offsetX $offsetY
connect r queryone_233 action_234 0 106.0 668.0 106.0 662.0 106.0 665.0 $offsetX $offsetY
connect r action_226 prect_222 0 -4.0 238.0 -4.0 247.0 -4.0 265.0 $offsetX $offsetY
connect r enter_221 action_226 0 -14.0 108.0 -9.0 122.0 -4.0 145.0 $offsetX $offsetY
connect r action_234 action_223 0 66.0 758.0 66.0 255.0 156.0 255.0 $offsetX $offsetY
connect r action_229 exit_228 0 236.0 588.0 61.0 532.0 -114.0 485.0 $offsetX $offsetY
connect r prect_222 queryone_225 0 -14.0 358.0 -69.0 352.0 -124.0 355.0 $offsetX $offsetY
connect r action_223 queryone_227 0 156.0 348.0 166.0 352.0 176.0 365.0 $offsetX $offsetY
connect r queryone_225 exit_228 0 -134.0 448.0 -144.0 462.0 -154.0 485.0 $offsetX $offsetY
connect r action_224 action_223 0 56.0 468.0 86.0 357.0 116.0 255.0 $offsetX $offsetY
connect r queryone_227 action_232 3 196.0 458.0 196.0 472.0 196.0 495.0 $offsetX $offsetY
connect r prect_222 action_223 1 46.0 358.0 81.0 302.0 116.0 255.0 $offsetX $offsetY
connect r queryone_225 action_224 1 -74.0 448.0 -49.0 407.0 -24.0 375.0 $offsetX $offsetY
connect r queryone_227 action_230 1 156.0 458.0 81.0 472.0 6.0 495.0 $offsetX $offsetY
connect r action_232 queryone_233 0 196.0 588.0 151.0 577.0 106.0 575.0 $offsetX $offsetY
connect r queryone_227 exit_228 0 136.0 458.0 -9.0 467.0 -154.0 485.0 $offsetX $offsetY
connect r action_230 queryone_233 0 6.0 588.0 56.0 577.0 106.0 575.0 $offsetX $offsetY
recordActiveScreen $p

#----------------------------------------------------------------------------
array set config {faces {}}

